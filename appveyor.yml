# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: hello_cross

  # don't need
  matrix:

    # Android
    - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    - env: TARGET=i686-linux-android DISABLE_TESTS=1
    - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # iOS
    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
      os: osx
    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
      os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

install:
  - ps: >-
      If ($env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($env:TARGET -eq 'i686-pc-windows-gnu') {
        $env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% &&
      cargo run --target %TARGET% --release
    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --target %TARGET% --release --bin %CRATE_NAME% -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: FBTPihubR7FaUNscHITv3utg/hHYaGxeX5lZlyKJ4tzTxYLnN/ow/7B0p6ACNdlS
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false